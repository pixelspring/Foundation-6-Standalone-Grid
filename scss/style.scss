// CSS Reset:
//      Box Sizing is the only absolute requirement here,
//      and you are likely to be using something like
//      normalize for the rest of your reset needs.
// --------------------------------------------------------
*,
*:before,
*:after {
    box-sizing: border-box;
}

html {
    font-family: "Helvetica", sans-serif;
    font-size: 100%;
    -ms-text-size-adjust: 100%;
    -webkit-text-size-adjust: 100%;
}

body {
    margin: 0;
}


// Variables:
// --------------------------------------------------------

@import 'util/util';

$global-font-size: 100%;

$global-width: rem-calc(1200);

// Breakpoint definitions:
$breakpoints: (
    small: 0,
    medium: 640px,
    large: 1024px,
    xlarge: 1200px,
    xxlarge: 1440px,
);

// Classes to output for prototyping grid
$breakpoint-classes: (small medium large);

// The maximum width of a row
$grid-row-width: $global-width;

// Default column count of the grid
$grid-column-count: 12;

// The amount of space between columns at different screen sizes. To use just one size, set the variable to a number instead of a map.
$grid-column-gutter: (
    small: 20px,
    medium: 30px,
);

// If true, the last column in a row will align to the opposite edge of the row
$grid-column-align-edge: true;

// The highest number of .x-up classes available when using the block grid CSS
$block-grid-max: 8;

// Bring on the grid:
@import 'grid/grid';

// Generate either the standard or the flex-grid classes for prototyping:
// @include foundation-grid;
// OR:
// @include foundation-flex-grid;
@include foundation-grid;


// Semantic Classes test:
@import 'semantic';


// Example Styling:
// --------------------------------------------------------
.row {
    margin-bottom: 20px;

    .row {margin-bottom: 0;}

    @include debug(darkred);
}